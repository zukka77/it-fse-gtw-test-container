services:
  oracle-xe:
    image: wnameless/oracle-xe-11g-r2
    ports:
      - '1521:1521'
    volumes:
      - ./oracle-xe/:/docker-entrypoint-initdb.d/:ro
    restart: always
  mongo:
    build:
      context: .
      dockerfile: ./mongo/Dockerfile
    ports:
      - '27888:27017'
    volumes:
      - ./mongo/:/docker-entrypoint-initdb.d/:rw
    restart: unless-stopped
  
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    restart: unless-stopped
  
  kafka:
    image: confluentinc/cp-kafka:6.2.1
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1 
    restart: unless-stopped
   
  ##MICROSERVIZI
  
  it-fse-srv-policy-manager:
    image: it-fse-ms-runner
    build:
      context: ./../it-fse-ms-runner/
    environment:
      URL: ${REPO_BASE_URL}/it-fse-srv-policy-manager.git
      BRANCH: ${CURRENT_BRANCH}
      PORT: 10000
    volumes: 
      - mvn-cache:/root/.m2
    network_mode: "bridge"
    extra_hosts:       
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    ports:
      - 10000:10000
    healthcheck:
      test: "curl --fail --silent localhost:10000/status | grep UP || exit 1"
      interval: 40s
      retries: 20
      start_period: 20s
      timeout: 10s
    depends_on:
      kafka:
        condition: service_started
      oracle-xe:
        condition: service_started

  it-fse-prov-be-notifier:
    image: it-fse-ms-runner
    build:
      context: ./../it-fse-ms-runner/
    environment:
      URL: ${REPO_BASE_URL}/it-fse-prov-be-notifier.git
      BRANCH: ${CURRENT_BRANCH}
      PORT: 8083
    volumes: 
      - mvn-cache:/root/.m2
    network_mode: "bridge"
    extra_hosts:       
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    ports:
      - 8083:8083
    healthcheck:
      test: "curl --fail --silent localhost:8083/status | grep UP || exit 1"
      interval: 40s
      retries: 20
      start_period: 20s
      timeout: 10s
    depends_on:
      kafka:
        condition: service_started
      oracle-xe:
        condition: service_started

  it-fse-srv-converter:
    image: it-fse-ms-runner
    build:
      context: ./../it-fse-ms-runner/
    environment:
      URL: ${REPO_BASE_URL}/it-fse-srv-converter.git
      BRANCH: ${CURRENT_BRANCH}
      PORT: 8010
    volumes: 
      - mvn-cache:/root/.m2
    network_mode: "bridge"
    extra_hosts:       
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    ports:
      - 8010:8010
    healthcheck:
      test: "curl --fail --silent localhost:8010/status | grep UP || exit 1"
      interval: 40s
      retries: 20
      start_period: 20s
      timeout: 10s
  
  it-fse-srv-dictionary:
    image: it-fse-ms-runner
    build:
      context: ./../it-fse-ms-runner/
    environment:
      URL: ${REPO_BASE_URL}/it-fse-srv-dictionary.git
      BRANCH: ${CURRENT_BRANCH}
      PORT: 9088
    volumes: 
      - mvn-cache:/root/.m2
    network_mode: "bridge"
    extra_hosts:       
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    ports:
      - 9088:9088
    healthcheck:
      test: "curl --fail --silent localhost:9088/status | grep UP || exit 1"
      interval: 40s
      retries: 20
      start_period: 20s
      timeout: 10s
    depends_on:
      mongo:
        condition: service_started
  
  it-fse-srv-log-ingestion:
    image: it-fse-ms-runner
    build:
      context: ./../it-fse-ms-runner/
    environment:
      URL: ${REPO_BASE_URL}/it-fse-srv-dictionary.git
      BRANCH: ${CURRENT_BRANCH}
      PORT: 9097
    volumes: 
      - mvn-cache:/root/.m2
    network_mode: "bridge"
    extra_hosts:       
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    ports:
      - 9097:9097
    healthcheck:
      test: "curl --fail --silent localhost:9097/status | grep UP || exit 1"
      interval: 40s
      retries: 20
      start_period: 20s
      timeout: 10s
    depends_on:
      mongo:
        condition: service_started
      kafka:
        condition: service_started

  it-fse-srv-predictive-maintainer:
    image: it-fse-ms-runner
    build:
      context: ./../it-fse-ms-runner/
    environment:
      URL: ${REPO_BASE_URL}/it-fse-srv-predictive-maintainer.git
      BRANCH: ${CURRENT_BRANCH}
      PORT: 10001
    volumes: 
      - mvn-cache:/root/.m2
    network_mode: "bridge"
    extra_hosts:       
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    ports:
      - 10001:10001
    healthcheck:
      test: "curl --fail --silent localhost:10001/status | grep UP || exit 1"
      interval: 40s
      retries: 20
      start_period: 20s
      timeout: 10s
    depends_on:
      mongo:
        condition: service_started
      kafka:
        condition: service_started
      
  it-fse-srv-query:
    image: it-fse-ms-runner
    build:
      context: ./../it-fse-ms-runner/
    environment:
      URL: ${REPO_BASE_URL}/it-fse-srv-query.git
      BRANCH: ${CURRENT_BRANCH}
      PORT: 9091
    volumes: 
      - mvn-cache:/root/.m2
    network_mode: "bridge"
    extra_hosts:       
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    ports:
      - 9091:9091
    healthcheck:
      test: "curl --fail --silent localhost:9091/status | grep UP || exit 1"
      interval: 40s
      retries: 20
      start_period: 20s
      timeout: 10s
    depends_on:
      mongo:
        condition: service_started

  it-fse-srv-terminology-server:
    image: it-fse-ms-runner
    build:
      context: ./../it-fse-ms-runner/
    environment:
      URL: ${REPO_BASE_URL}/it-fse-srv-terminology-server.git
      BRANCH: ${CURRENT_BRANCH}
      PORT: 8080
    volumes: 
      - mvn-cache:/root/.m2
    network_mode: "bridge"
    extra_hosts:       
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    ports:
      - 8080:8080
    healthcheck:
      test: "curl --fail --silent localhost:8080/status | grep UP || exit 1"
      interval: 40s
      retries: 20
      start_period: 20s
      timeout: 10s
    depends_on:
      oracle-xe:
        condition: service_started

volumes:
  mvn-cache: